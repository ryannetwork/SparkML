group 'mlr'
version '0.0.1'

apply plugin: 'scala'
apply plugin:'java'
apply plugin: 'com.github.johnrengelman.shadow'

def base_name = 'mlr'
def deploy_destination = "/deploy/"

project.ext {
    scalaVersion = '2.10.6'
}

repositories{
    mavenCentral()
    maven{
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/releases/"
    }
}

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
    }
}


configurations {
    provided
}

sourceSets {
    main { compileClasspath += configurations.provided }
}

dependencies {
    provided "org.scala-lang:scala-library:2.10.6"
    provided "org.apache.spark:spark-core_2.10:1.6.0"
    provided "org.apache.spark:spark-mllib_2.10:1.6.0"
    compile "org.scalanlp:breeze_2.10:0.12"
    compile "org.scalanlp:breeze-natives_2.10:0.12"
}

shadowJar {
    zip64 = true
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    baseName "$base_name"
}

task copyShadowJar(type:Copy, dependsOn: shadowJar) {
    println projectDir.path + " COPYING"
    from(projectDir.path + '/build/libs/')
    into(projectDir.path + deploy_destination)
    include '*.jar'
}


task createDeploymentBundle(type: Zip, dependsOn: copyShadowJar){
    destinationDir = file(projectDir.path + deploy_destination)
    archiveName "${base_name}.zip"
    from file(projectDir.path + deploy_destination)
    include '*.jar'
}


task zip(dependsOn:[createDeploymentBundle]) << {
    println "Done."
}


defaultTasks 'clean','zip'